..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**built-in method**

.. index:: pair: current_predicate/1; Built-in method
.. _methods_current_predicate_1:

``current_predicate/1``
=======================

Description
-----------

::

   current_predicate(Predicate)

Enumerates, by backtracking, visible, user-defined, object predicates.
Built-in predicates and predicates not declared using a scope directive
are not enumerated.

This predicate also succeeds for any predicates listed in :ref:`directives_uses_2`
and :ref:`directives_use_module_2` directives.

When ``Predicate`` is bound at compile time to a ``(:)/2`` term, this
predicate enumerates module predicates (assuming that the
:term:`backend Prolog compiler` supports modules).

Modes and number of proofs
--------------------------

::

   current_predicate(?predicate_indicator) - zero_or_more

Errors
------

| ``Predicate`` is neither a variable nor a valid predicate indicator:
|     ``type_error(predicate_indicator, Predicate)``
| ``Predicate`` is a ``Name/Arity`` term but ``Functor`` is neither a variable nor an atom:
|     ``type_error(atom, Name)``
| ``Predicate`` is a ``Name/Arity`` term but ``Arity`` is neither a variable nor an integer:
|     ``type_error(integer, Arity)``
| ``Predicate`` is a ``Name/Arity`` term but ``Arity`` is a negative integer:
|     ``domain_error(not_less_than_zero, Arity)``

Examples
--------

| To enumerate, by backtracking, the locally visible user predicates or the user predicates visible in :term:`this`:
|     ``current_predicate(Predicate)``
| To enumerate, by backtracking, the public and protected user predicates visible in :term:`self`:
|     ``::current_predicate(Predicate)``
| To enumerate, by backtracking, the public user predicates visible for an explicit object:
|     ``Object::current_predicate(Predicate)``

An example of enumerating locally visible object predicates. These include
predicates listed using :ref:`directives_uses_2` and :ref:`directives_use_module_2`
directives:

::

   :- object(foo).

       :- uses(bar, [
           baz/1, quux/2
       ]).

       :- public(pred/1).
       pred(X) :-
          current_predicate(X).

   :- end_object.

::

   | ?- foo::pred(X).
   X = pred/1 ;
   X = baz/1 ;
   X = quux/2 ;
   no

.. seealso::

   :ref:`methods_current_op_3`,
   :ref:`methods_predicate_property_2`,
   :ref:`directives_uses_2`,
   :ref:`directives_use_module_2`
