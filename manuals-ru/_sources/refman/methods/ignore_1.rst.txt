..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**built-in method**

.. index:: pair: ignore/1; Built-in method
.. _methods_ignore_1:

``ignore/1``
============

Description
-----------

::

   ignore(Goal)

This predicate succeeds whether its argument succeeds or fails and it is
not re-executable. This built-in meta-predicate is declared as a private
method and thus cannot be used as a message to an object.

This meta-predicate is opaque to cuts in its argument.

Modes and number of proofs
--------------------------

::

   ignore(+callable) - one

Errors
------

| ``Goal`` is a variable:
|     ``instantiation_error``
| ``Goal`` is neither a variable nor a callable term:
|     ``type_error(callable, Goal)``

Examples
--------

| Call a goal and succeeding even if it fails:
|     ``ignore(Goal)``
| To send a message succeeding even if it fails to :term:`self`:
|     ``ignore(::Goal)``
| To send a message succeeding even if it fails to an explicit object:
|     ``ignore(Object::Goal)``

.. seealso::

   :ref:`methods_call_N`,
   :ref:`methods_once_1`,
   :ref:`methods_not_1`
