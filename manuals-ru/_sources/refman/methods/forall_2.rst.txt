..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**built-in method**

.. index:: pair: forall/2; Built-in method
.. _methods_forall_2:

``forall/2``
============

Description
-----------

::

   forall(Generator, Test)

For all solutions of ``Generator``, ``Test`` is true. This meta-predicate
implements a *generate-and-test* loop using a definition equivalent to
``\+ (Generator, \+ Test)``.

This built-in meta-predicate is declared as a private method and thus
cannot be used as a message to an object.

Modes and number of proofs
--------------------------

::

   forall(@callable, @callable) - zero_or_one

Errors
------

| Either ``Generator`` or ``Test`` is a variable:
|     ``instantiation_error``
| ``Generator`` is neither a variable nor a callable term:
|     ``type_error(callable, Generator)``
| ``Test`` is neither a variable nor a callable term:
|     ``type_error(callable, Test)``

Examples
--------

| To call both goals in the context of the object or category containing the call:
|     ``forall(Generator, Test)``
| To send both goals as messages to :term:`self`:
|     ``forall(::Generator, ::Test)``
| To send both goals as messages to explicit objects:
|     ``forall(Object1::Generator, Object2::Test)``

.. seealso::

   :ref:`methods_bagof_3`,
   :ref:`methods_findall_3`,
   :ref:`methods_findall_4`,
   :ref:`methods_setof_3`
