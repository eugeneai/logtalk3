..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**built-in method**

.. index:: pair: type_error/2; Built-in method
.. _methods_type_error_2:

``type_error/2``
================

Description
-----------

::

   type_error(Type, Culprit)

Throws a type error. Used when the type of an argument is incorrect. For example,
trying ot use a non-callable term as a message. This built-in method is declared
private and thus cannot be used as a message to an object. Calling this predicate
is equivalent to the following sequence of goals:

::

   ...,
   context(Context),
   throw(error(type_error(Type,Culprit), Context)).

This allows the user to generate errors in the same format used by the
runtime.

Possible values for ``Type`` include all the types defined by the ``type``
library object and by other libraries such as ``os``, ``expecteds``, and
``optionals``. The value of ``Culprit`` is the argument or one of its sub-terms 
that caused the error.

Modes and number of proofs
--------------------------

::

   type_error(@nonvar, @term) - error

Errors
------

| When called:
|     ``type_error(Type, Culprit)``

Examples
--------

::

   ...,
   \+ atom(Name),
   type_error(atom, Name).

.. seealso::

   :ref:`methods_catch_3`,
   :ref:`methods_throw_1`,
   :ref:`methods_context_1`,
   :ref:`methods_instantiation_error_0`,
   :ref:`methods_uninstantiation_error_1`,
   :ref:`methods_domain_error_2`,
   :ref:`methods_existence_error_2`,
   :ref:`methods_permission_error_3`,
   :ref:`methods_representation_error_1`
   :ref:`methods_evaluation_error_1`,
   :ref:`methods_resource_error_1`,
   :ref:`methods_syntax_error_1`,
   :ref:`methods_system_error_0`,
