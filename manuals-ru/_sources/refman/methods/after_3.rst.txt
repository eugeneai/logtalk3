..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**built-in method**

.. index:: pair: after/3; Built-in method
.. _methods_after_3:

``after/3``
===========

Description
-----------

::

   after(Object, Message, Sender)

User-defined method for handling *after* events. This method is
declared in the :ref:`monitoring <apis:monitoring/0>` built-in protocol
as a public predicate and automatically called by the runtime for messages
sent using the :ref:`control_send_to_object_2` control construct from within
objects compiled with the :ref:`events <flag_events>` flag set to ``allow``.

Note that you can make this predicate scope protected or private by using,
respectively, :ref:`protected or private implementation <inheritance_scope>`
of the ``monitoring`` protocol.

Modes and number of proofs
--------------------------

::

   after(?object_identifier, ?callable, ?object_identifier) - zero_or_more

Errors
------

(none)

Examples
--------

::

   :- object(...,
       implements(monitoring),
       ...).

       % write a log message when a message is successful:
       after(Object, Message, Sender) :-
           writeq(Object), write('::'), writeq(Message),
           write(' from '), writeq(Sender), nl.

.. seealso::

   :ref:`methods_before_3`,
   :ref:`predicates_abolish_events_5`,
   :ref:`predicates_current_event_5`,
   :ref:`predicates_define_events_5`
