..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**directive**

.. index:: pair: protected/1; Directive
.. _directives_protected_1:

``protected/1``
===============

Description
-----------

::

   protected(Name/Arity)
   protected((Name/Arity, ...))
   protected([Name/Arity, ...])

   protected(Name//Arity)
   protected((Name//Arity, ...))
   protected([Name//Arity, ...])

   protected(op(Precedence,Associativity,Operator))
   protected((op(Precedence,Associativity,Operator), ...))
   protected([op(Precedence,Associativity,Operator), ...])

Declares protected predicates, protected grammar rule non-terminals, and
protected operators. A protected predicate can only be called from the
object containing the directive or from an object that inherits the
directive. A protected non-terminal can only be used as an argument in a
:ref:`methods_phrase_2` and :ref:`methods_phrase_3` calls from the object
containing the directive or from an object that inherits the directive.

.. note::

   Protected operators are not inherited but declaring them provides
   a reusable specification for using them in descendant objects (or
   categories).

Template and modes
------------------

::

   protected(+predicate_indicator_term)
   protected(+non_terminal_indicator_term)
   protected(+operator_declaration)

Examples
--------

::

   :- protected(init/1).

   :- protected((print/2, convert/4)).

   :- protected([load/1, save/3]).

.. seealso::

   :ref:`directives_private_1`,
   :ref:`directives_public_1`,
   :ref:`methods_predicate_property_2`
