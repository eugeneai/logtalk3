..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**directive**

.. index:: pair: public/1; Directive
.. _directives_public_1:

``public/1``
============

Description
-----------

::

   public(Name/Arity)
   public((Name/Arity, ...))
   public([Name/Arity, ...])

   public(Name//Arity)
   public((Name//Arity, ...))
   public([Name//Arity, ...])

   public(op(Precedence,Associativity,Operator))
   public((op(Precedence,Associativity,Operator), ...))
   public([op(Precedence,Associativity,Operator), ...])

Declares public predicates, public grammar rule non-terminals, and public
operators. A public predicate can be called from any object. A public
non-terminal can be used as an argument in :ref:`methods_phrase_2` and
:ref:`methods_phrase_3` calls from any object.

.. note::

   Declaring a public operator does not make it global when the entity
   holding the scope directive is compiled and loaded. But declaring
   public operators provides a reusable specification for using them
   in the entity clients.

Template and modes
------------------

::

   public(+predicate_indicator_term)
   public(+non_terminal_indicator_term)
   public(+operator_declaration)

Examples
--------

::

   :- public(ancestor/1).

   :- public((instance/1, instances/1)).

   :- public([leaf/1, leaves/1]).

.. seealso::

   :ref:`directives_private_1`,
   :ref:`directives_protected_1`,
   :ref:`methods_predicate_property_2`
