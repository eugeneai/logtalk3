..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**directive**

.. index:: pair: discontiguous/1; Directive
.. _directives_discontiguous_1:

``discontiguous/1``
===================

Description
-----------

::

   discontiguous(Name/Arity)
   discontiguous((Name/Arity, ...))
   discontiguous([Name/Arity, ...])

   discontiguous(Name//Arity)
   discontiguous((Name//Arity, ...))
   discontiguous([Name//Arity, ...])

Declares discontiguous predicates and discontiguous grammar rule
non-terminals. The use of this directive should be avoided as not all
:term:`backend Prolog compilers <backend Prolog compiler>` support
discontiguous predicates.

.. warning::

   Some backend Prolog compilers declare the atom ``discontiguous`` as
   an operator for a lighter syntax. But this makes the code non-portable
   and is therefore a practice best avoided.

Template and modes
------------------

::

   discontiguous(+predicate_indicator_term)
   discontiguous(+non_terminal_indicator_term)

Examples
--------

::

   :- discontiguous(counter/1).

   :- discontiguous((lives/2, works/2)).

   :- discontiguous([db/4, key/2, file/3]).
