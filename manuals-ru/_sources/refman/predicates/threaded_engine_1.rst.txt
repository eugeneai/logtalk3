..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.


.. rst-class:: align-right

**built-in predicate**

.. index:: pair: threaded_engine/1; Built-in predicate
.. _predicates_threaded_engine_1:

``threaded_engine/1``
=====================

Description
-----------

::

   threaded_engine(Engine)

Enumerates, by backtracking, all existing engines. Engine names shall be
regarded as opaque terms; users shall not rely on its type.

.. note::

   This predicate requires a :term:`backend Prolog compiler` providing
   compatible multi-threading primitives. The value of the read-only
   :ref:`engines <flag_engines>` flag is set to ``supported`` when that
   is the case.

Modes and number of proofs
--------------------------

::

   threaded_engine(?nonvar) - zero_or_more

Errors
------

(none)

Examples
--------

::

   % check that the worker_1 engine exists:
   | ?- threaded_engine(worker_1).

   % write the names of all existing engines:
   | ?- forall(
            threaded_engine(Engine),
            (writeq(Engine), nl)
        ).

.. seealso::

   :ref:`predicates_threaded_engine_create_3`,
   :ref:`predicates_threaded_engine_self_1`,
   :ref:`predicates_threaded_engine_destroy_1`
