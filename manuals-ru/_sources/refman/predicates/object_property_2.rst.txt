..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**built-in predicate**

.. index:: pair: object_property/2; Built-in predicate
.. _predicates_object_property_2:

``object_property/2``
=====================

Description
-----------

::

   object_property(Object, Property)

Enumerates, by backtracking, the properties associated with the defined
objects. The valid properties are listed in the language grammar section
on :ref:`entity properties <grammar_entity_properties>` and described in
the User Manual section on :ref:`object properties <objects_properties>`.

Modes and number of proofs
--------------------------

::

   object_property(?object_identifier, ?object_property) - zero_or_more

Errors
------

| ``Object`` is neither a variable nor a valid object identifier:
|     ``type_error(object_identifier, Object)``
| ``Property`` is neither a variable nor a callable term:
|     ``type_error(callable, Property)``
| ``Property`` is a callable term but not a valid object property:
|     ``domain_error(object_property, Property)``

Examples
--------

::

   % enumerate the properties of the logtalk built-in object:
   | ?- object_property(logtalk, Property).

   Property = context_switching_calls ;
   Property = source_data ;
   Property = threaded ;
   Property = static ;
   Property = built_in ;
   ...

.. seealso::

   :ref:`predicates_abolish_object_1`,
   :ref:`predicates_create_object_4`,
   :ref:`predicates_current_object_1`,
   :ref:`predicates_extends_object_2_3`,
   :ref:`predicates_instantiates_class_2_3`,
   :ref:`predicates_specializes_class_2_3`,
   :ref:`predicates_complements_object_2`
