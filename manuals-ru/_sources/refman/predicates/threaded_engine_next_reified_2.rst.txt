..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**built-in predicate**

.. index:: pair: threaded_engine_next_reified/2; Built-in predicate
.. _predicates_threaded_engine_next_reified_2:

``threaded_engine_next_reified/2``
==================================

Description
-----------

::

   threaded_engine_next_reified(Engine, Answer)

Retrieves an answer from an engine and signals it to start computing the
next answer. This predicate always succeeds and blocks until an answer
becomes available. Answers are returned using the terms ``the(Answer)``,
``no``, and ``exception(Error)``.

.. note::

   This predicate requires a :term:`backend Prolog compiler` providing
   compatible multi-threading primitives. The value of the read-only
   :ref:`engines <flag_engines>` flag is set to ``supported`` when that
   is the case.

Modes and number of proofs
--------------------------

::

   threaded_engine_next_reified(@nonvar, ?nonvar) - one

Errors
------

| ``Engine`` is a variable:
|     ``instantiation_error``
| ``Engine`` is neither a variable nor the name of an existing engine:
|     ``existence_error(engine, Engine)``

Examples
--------

::

   % get the next reified answer from the worker_1 engine:
   | ?- threaded_engine_next_reified(worker_1, Answer).

.. seealso::

   :ref:`predicates_threaded_engine_create_3`,
   :ref:`predicates_threaded_engine_next_2`,
   :ref:`predicates_threaded_engine_yield_1`
