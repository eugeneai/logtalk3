..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**built-in predicate**

.. index:: pair: logtalk_linter_hook/7; Built-in predicate
.. _predicates_logtalk_linter_hook_7:

``logtalk_linter_hook/7``
=========================

Description
-----------

::

   logtalk_linter_hook(Goal, Flag, File, Lines, Type, Entity, Warning)

Multifile user-defined predicate, supporting the definition of custom linter
warnings. Experimental. The ``Goal`` argument can be a message sending goal,
``Object::Message``, a call to a Prolog built-in predicate, or a call to a
module predicate, ``Module:Predicate``. The ``Flag`` argument must be a
supported linter flag. The ``Warning`` argument must be a valid ``core``
message term.


Modes and number of proofs
--------------------------

::

   logtalk_linter_hook(@callable, +atom, +atom, +pair(integer), +atom, @object_identifier, --callable) - zero_or_more

Errors
------

(none)

Examples
--------

::

   :- multifile(user::logtalk_linter_hook/7).
   % warn about using list::append/3 to construct a list from an head and a tail
   user::logtalk_linter_hook(
       list::append(L1,L2,L), suspicious_calls,
       File, Lines, Type, Entity,
       suspicious_call(File, Lines, Type, Entity, list::append(L1,L2,L), [L=[Head|L2]])
   ) :-
       nonvar(L1),
       L1 = [Head].
