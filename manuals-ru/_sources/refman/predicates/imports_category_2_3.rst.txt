..
   Этот файл является частью проекта Logtalk <https://logtalk.org/>  
   Copyright 1998-2022 Paulo Moura <pmoura@logtalk.org>
   Идентификатор лицензии SPDX: Apache-2.0

   Лицензируется в соответствии с лицензией Apache, версия 2.0 (далее «Лицензия»);
   вы не можете использовать этот файл иначе, как в соответствии с Лицензией.
   Вы можете получить копию Лицензии на

       http://www.apache.org/licenses/LICENSE-2.0

   Если это не требуется законодательством или не согласовано в письменной форме, программное обеспечение
   распространяется по лицензии на условиях "КАК ЕСТЬ".,
   БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ ИЛИ УСЛОВИЙ, явных или подразумеваемых.
   См. лицензию для конкретного языка, регулирующего разрешения и
   ограничения, предусмотренные Лицензией.


.. rst-class:: align-right

**built-in predicate**

.. index:: pair: imports_category/2-3; Built-in predicate
.. _predicates_imports_category_2_3:

``imports_category/2-3``
========================

Description
-----------

::

   imports_category(Object, Category)

   imports_category(Object, Category, Scope)

Enumerates, by backtracking, importation relations between objects and
categories. The relation scope is represented by the atoms ``public``,
``protected``, and ``private``.

Modes and number of proofs
--------------------------

::

   imports_category(?object_identifier, ?category_identifier) - zero_or_more
   imports_category(?object_identifier, ?category_identifier, ?scope) - zero_or_more

Errors
------

| ``Object`` is neither a variable nor a valid object identifier:
|     ``type_error(object_identifier, Object)``
| ``Category`` is neither a variable nor a valid category identifier:
|     ``type_error(category_identifier, Category)``
| ``Scope`` is neither a variable nor an atom:
|     ``type_error(atom, Scope)``
| ``Scope`` is an atom but an invalid entity scope:
|     ``domain_error(scope, Scope)``

Examples
--------

::

   % check that the xref_diagram object imports the diagram category:
   | ?- imports_category(xref_diagram, diagram).

   % enumerate the objects that privately import the diagram category:
   | ?- imports_category(Object, diagram, private).

.. seealso::

   :ref:`predicates_current_category_1`,
   :ref:`predicates_complements_object_2`
